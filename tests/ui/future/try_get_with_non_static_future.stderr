error[E0597]: `data` does not live long enough
  --> $DIR/try_get_with_non_static_future.rs:13:24
   |
13 |           let data_ref = &data;
   |                          ^^^^^ borrowed value does not live long enough
...
16 |               .get_or_try_insert_with(0, async {
   |  ________________________________________-
17 | |                 // This may become a dangling pointer.
18 | |                 // The async block can be executed by a different thread so
19 | |                 // the captured reference `data_ref` may outlive its value.
20 | |                 Ok(data_ref.to_string()) as Result<_, Infallible>
21 | |             })
   | |_____________- argument requires that `data` is borrowed for `'static`
...
26 |   }
   |   - `data` dropped here while still borrowed

error[E0373]: async block may outlive the current function, but it borrows `data_ref`, which is owned by the current function
  --> $DIR/try_get_with_non_static_future.rs:16:46
   |
16 |               .get_or_try_insert_with(0, async {
   |  ______________________________________________^
17 | |                 // This may become a dangling pointer.
18 | |                 // The async block can be executed by a different thread so
19 | |                 // the captured reference `data_ref` may outlive its value.
20 | |                 Ok(data_ref.to_string()) as Result<_, Infallible>
   | |                    -------- `data_ref` is borrowed here
21 | |             })
   | |_____________^ may outlive borrowed value `data_ref`
   |
   = note: async blocks are not executed immediately and must either take a reference or ownership of outside variables they use
help: to force the async block to take ownership of `data_ref` (and any other referenced variables), use the `move` keyword
   |
16 |             .get_or_try_insert_with(0, async move {
   |                                              ++++
